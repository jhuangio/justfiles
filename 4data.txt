bills
...

journal
...
2017
...
. 02/21/17 - first day @ cardinals
. 06/30/17 - last day @ cardinals
. 07/24/17 - first day @ bankers

js
...
4 - behaviors
. intro
. global variables
. strict mode 
. read only properties
. deleting properties
. duplicates
. octals and hexidecimals, oh my
. with
. what is this anyway
. this is new objects 
. summary
5 - async patterns
. intro
. callbacks
. promises 
. es6 and babel
. async - await
. summary
6 - production code 
. intro 
. npm settings 
. environmental variables
. cross platform concerns
. simplify your world

linkedin
...
"Performing HTTP requests (AJAX) Requests throught a Restful JSON API."
"Elasticsearch" - no sql document based db

links
...
Material Design Home Page 
https://material.angular.io/

Material Design Icon Page
https://materialdesignicons.com/

Angular 4 Material Tutorial >>>
https://www.youtube.com/watch?v=UnKsoCeTdEI

jshint >>>
jshint.com

learn javascript deeper >>>
https://medium.freecodecamp.com/what-to-learn-in-2017-if-youre-a-frontend-developer-b6cfef46effd

functional javascript ebook >>>
https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch1.html

beginning javascript >>>
ftp://91.193.236.10/pub/docs/linux-support/programming/JavaScript/[Wiley.%20Wrox]%20-%20Beginning%20JavaScript,%204th%20ed.%20-%20[Wilton,%20McPeak].pdf

blink electric skateboards >>>
https://www.actonglobal.com/product/blink-qu4tro/

visual studio teams >>>
app.vssps.visualstudio.com 
https://cardinalsolutions.visualstudio.com

angular material and cli >>>
http://candordeveloper.com/2017/04/25/how-to-create-dynamic-menu-and-page-title-with-angular-material-and-cli/

angular2 cli >>>
https://dustinewers.com/angular-cli-with-net-core/

.net core from scratch >>>
https://jonhilton.net/2016/10/06/adding-web-api-to-your-net-core-application/

barbara oakley: "learning how to learn" >>>
https://www.youtube.com/watch?v=vd2dtkMINIw

>>> you don't know js - kyle simpson
>>> https://github.com/specter01wj/Book-you_dont_know_js

notes
... 

Expandacraft Gulfport
https://www.youtube.com/watch?v=c0LMBrXAVJE
5102 Gulfport Blvd S. Gulfport, FL 33707

HoverboardX KooWheel Electric Skateboard

06.02.17 - node server
...
const http = require('http');

const hostname = '127.0.0.1';
const port = 3000;

const server = http.createServer((req, res) => {
    res.statusCode = 200;
    res.setHeader('Content-type', 'text/plain');
    res.end('Hello World!');
});

server.listen(port, hostname, () => {
    console.log('Server started on port '+port);
});

06.02.17 - github notes
...
01. push changes
03. commit changes
04. sync

06.02.17 - setup node dev http server
...
01. install node
02. create project folder
03. cmd prompt run "npm init" to install node_modules folders/files
04. cd to your project folder for example c:\catjia\bebe
05. run "node c:\catjia\node_modules\http-server\bin\http-server

test to see if x exists >>>
. if(typeof x !== 'undefined'){
    console.log('Exist');
} else {
    console.log('Not Exisit');
}

strict mode >>>
instert at top of code >>>
'use strict';

iife >>>
immediately invoked function expression >>>

format numbers to 2 decimal points >>>
document.write(parseFloat(jia(48,793)).toFixed(2));

use \ backslash to escape a character >>>
in front of what you want escaped for example >>>
'Peter O\'Toole'

naming convention - the Hungarian notation >>>
beginning of name is a 3 letter code for data type for example >>>
intJia

convert string to number >>>
var x = "0";
var y = parseInt(x) + 2; (answer is 2)

how to declare a new array >>>
var myArray = new Array();

what is SCOPE , it is the extent of a variable's availability >>>

error handling >>>
try ... catch statement

joining arrays >>>
the concat() method

modern web developer >>>
Javascript - typescript, es2017, coffeescript, jsx/tsx
libraries / frameworks - RxJS, jQuery, Handlebars, Angular, React
Architecture - MVC, Redux, Flux
Module Loading System / Package Managers - System.js, AMD, JSPM, Bower
Build Pipelines - Webpack, Babel, Traceur, Minifiers, Grunt/Gulp
CSS - LESS SASS

melissa swymer - (813) 944-8315

tools of titans
tim ferris

axis of awesome 4 or 5 chords play almost every pop song

stickk dotcom

perfection is achieved not when there's nothing more to add but when there's nothing more to take away

the 9 habits to stop now - the not to do list
1. do not answer phone calls from unknown phone numbers
2. do not email first thing in the morning or last thing at night
email can wait until after you complete one important thing first
3. do not agree to meetings or calls with no clear agenda or endtime
no meeting or calls should last more than 30 mins
4. don't check email constantly check @ set times twice per day
5. 
6. do not overcommunicate with low profit high maintenance customers
7. 
8. do not carry a digital leash 24 x 7 - sat leave phone at home
9. 

focus on top goals of the day instead of
manufactured emergencies
defining the few things that can change your business and life
think harder not work harder

crack hit aha moment

kato stoic

pluralsight courses
...

VR
...
. Creating VR Experiences with JavaScript by Alex Mackey

ASP.NET
...
01. ASP.NET Core: The MVC Request Life Cycle by Alex Wolf
02. ASP.NET Core wiht the New MSBuild Based Tooling by Wes Higbee

typescript
...
. Getting Started with typescript by Brice Wilson (3h8m)
. Using Visual Studio Code for ASP.NET Core Projects by Shawn Wildermuth (2h26min)
. typescript fundamentals by dan wahlin and john papa (4h25m)
. a practical start with typescript by roland guijt (1h39m)

angular 2
...
. angular 2: getting started by deborah kurata (5h26m)
. angular 2 fundamentals by jim cooper and joe eames (9h59m)

RxJS
...
. getting started with reactive programming using rxjs by scott allen (1h52m)

sharepoint
...
. sharepoint framework - getting started by sahil malik (2h16m)

REST API
...

. javascript objects and prototypes by jim cooper (48min)


>>>
xsl: for sharepoint
>>>

<!--
This section is the set up and can be used at the top of any external XSLT stylesheet file
-->
<xsl:stylesheet
xmlns:x="http://www.w3.org/2001/XMLSchema"
xmlns:d="http://schemas.microsoft.com/sharepoint/dsp"
version="1.0"
exclude-result-prefixes="xsl msxsl ddwrt"
xmlns:ddwrt="http://schemas.microsoft.com/WebParts/v2/DataView/runtime"
xmlns:asp="http://schemas.microsoft.com/ASPNET/20"
xmlns:__designer="http://schemas.microsoft.com/WebParts/v2/DataView/designer"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
xmlns:msxsl="urn:schemas-microsoft-com:xslt"
xmlns:SharePoint="Microsoft.SharePoint.WebControls"
xmlns:ddwrt2="urn:frontpage:internal">
<xsl:output method="html" indent="no"/>
<!--
End of Set Up
-->
<!--
The initial template which in this case is matching everything with "/"
It then creates a variable called Rows - this is accessed as $Rows
A standard HTML table and header row with the names of our columns is next followed by a loop through each row of the list and calls our second template dvt1-rowview to display the contents
-->
<xsl:template match="/" xmlns:x="http://www.w3.org/2001/XMLSchema">
<xsl:variable name="Rows" select="/dsQueryResponse/Rows/Row" />
<table cellpadding="10" width="331">
<tr>
<td align="center">
<a href="https://cardinalsolutions.sharepoint.com/sites/dev-jhuang/Lists/XMLCal/calendar.aspx" style="text-decoration:none;"><b><font color="#000000">EVENTS CALENDAR</font></b></a>
</td>
</tr>

<xsl:choose>
<xsl:when test="$Rows">
<xsl:for-each select="$Rows">
<xsl:call-template name="dvt_1.rowview" />
</xsl:for-each>
</xsl:when>
<xsl:otherwise>
<tr>
<td bgcolor="#000000" align="center">
<font color="#ffffff"><b>There are no events scheduled this week.</b></font>
</td>
</tr>
</xsl:otherwise>
</xsl:choose>

</table>
</xsl:template>
<!--
End of first template
-->
<!--
Standard HTML rows and cells contain the contents of our list row
xsl:value-of command is used to display our columns
Columns are accessed as @InternalColumnName
-->
<xsl:template name="dvt_1.rowview">
<xsl:variable name="dept" select="@department"/>
<tr>
<td>
<xsl:attribute name="bgcolor">
<xsl:choose>
<xsl:when test="$dept ='Communications'">
#EFCA08
</xsl:when>
<xsl:when test="$dept ='Human Resources'">
#AAA1C8
</xsl:when>
<xsl:when test="$dept ='Away Game'">
#D1D5DE
</xsl:when>
<xsl:when test="$dept ='Client Services'">
#449DD1
</xsl:when>
<xsl:when test="$dept ='Community Relations'">
#575761
</xsl:when>
<xsl:when test="$dept ='Corporate Office'">
#78C0E0
</xsl:when>
<xsl:when test="$dept ='Corporate Partnerships'">
#D56062
</xsl:when>
<xsl:when test="$dept ='Innovation'">
#648381
</xsl:when>
<xsl:when test="$dept ='Marketing'">
#8ACB88
</xsl:when>
<xsl:when test="$dept ='Philanthropy'">
#B7B6C2
</xsl:when>
<xsl:when test="$dept ='Premium'">
#FFC4D1
</xsl:when>
<xsl:when test="$dept ='Ticket Sales'">
#967AA1
</xsl:when>
<xsl:when test="$dept ='Arena Ops General'">
#F49F0A
</xsl:when>
<xsl:when test="$dept ='Arena Ops Home Game'">
#ffffff
</xsl:when>

<xsl:otherwise>
#ffffff
</xsl:otherwise>
</xsl:choose>
</xsl:attribute>
<a href="javascript:NewItem2(event,'https://cardinalsolutions.sharepoint.com/sites/dev-jhuang/Lists/XMLCal/DispForm.aspx?ID={@ID}');" style="text-decoration:none;">

<font size="1">
<xsl:attribute name="color">
<xsl:choose>
<xsl:when test="$dept ='Arena Ops Home Game'">
#000000
</xsl:when>
<xsl:otherwise>
#ffffff
</xsl:otherwise>
</xsl:choose>
</xsl:attribute>

<b>
<xsl:value-of select="@department"/>:&#160;<xsl:value-of select="@Title"/><br/>
<xsl:value-of select="@calcWebDay" />&#160;<xsl:value-of select="@calcWebD2" /></b></font></a></td>

</tr>

</xsl:template>
</xsl:stylesheet>

07.24.17
angular
...

const appRoutes: Routes = [
  { path: 'crisis-center', component: CrisisListComponent },
  { path: 'hero/:id',      component: HeroDetailComponent },
  {
    path: 'heroes',
    component: HeroListComponent,
    data: { title: 'Heroes List' }
  },
  { path: '',
    redirectTo: '/heroes',
    pathMatch: 'full'
  },
  { path: '**', component: PageNotFoundComponent }
];

Elasticsearch
. no sql document based database
. blog storage engine
. log analytics tools
. document / index / shard / nodes / cluster
. www.elasticsearch.org
. Marvel plugin
. . Sense - nice query dashboard
. schemas (mappings)

(POST) http://localhost:9200/my_blog

{
    "mappings": {
        "post": {
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "post_text": {
                    "type": "string"
                },
                "post_date": {
                    "type": "date"
                }
            }
        }
    }
}

p s 
...
getting started with elasticsearch for .net developers

atlassian - jira
confulence


git notes
...
git add .
git commit -m 'add changes'
git push origin master

user story notes
...
. sortable
. small
. valuable
. estimatable
. independent
. testable
. template
... As a <user type>, I want to <function> so that <benefit>.
... As a <persona>, I want to <do something> so that I can <realize a reward>.

PERSONAS
...
SUPER ADMIN
PARTNER ADMIN OR SUB ADMIN
MOMENT GIVER
MOMENT RECEIVER

sql
...
. microsoft sql server management studio

.net
...
. the CLR manages your app common language runtime
. namespace
. c:\windows\microsoft.net\framework\v4.0.30319\csc - visual c# complier
. ctor (tab/tab) Constructor shortcut

js
..
. constructor funcions should be named with Initial caps
. strict mode es5

angular 4
...
. ng build --prod --aot=false
. index.html
. favicon
. polyfills 1
. main 2
. styles 3 
. vendor 4
. inline 5

oop
...
. three pillars
.. 1 encapsulation (primary)
.. 2 inheritance
.. 3 polymorphism
. inheritance
. polymorphism
. abstract classes
. interfaces
. common interfaces

books
...
. the elements of style - william strunk
. high performance javascript
. javascript patterns

SRP - Single responsibility principles
...
. a computer programming principle that states that every module or class should have a responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class.

angular style guide
...
. limiting files to 400 lines of code
. make code more reusable, easier to read and less mistake prone

www
...
. https://developer.mozilla.org/en-US/docs/JavaScript
. http://jsforcats.com/

p s
...
(001) - c# fundamentals with visual studio 2015 by scott allen - 5h21m (07.27.17) 3.10 computation
002 - building a js dev environment by cory house - 5h19m
003 - basics of programming with js by kyle simpson - 2h40m
004 - front-end web dev quick start with html5, css, and js - by shawn wildermuth - 3h4m
005 - advanced js by kyle simpson - 6h55m
006 - practical design patterns in js by jonathan mills - 3h10m
007 - object-oriented programming in js - es6 by mark zamoyta - 2h27m
008 - quick start to js: vol 1 by susan simkins - 1h43m
009 - js async module definition (amd) explained by kevin Murray - 3h4m
010 - rapid js training by mark zamoyta - 5h43m
011 - js: from fundamentals to functional js - bianca gandolfo - 7h9m
012 - js objects and prototypes - jim cooper - 48min
013 - js best practices - jonatha mills - 2h39m
014 - js from scratch - jesse liberty - 1h52m
015 - js: adv fundaments to jquery & pure dom scripting - justin meyer - 8h59m
016 - js fundamentals - lia mclennan - 2h53m
017 - js fundamentals for es6 - scott allen - 4h51m
018 - quick start to js: vol 2 - susan simkins - 1h53m
019 - choosing a js framework - brian holt - 5h31m
(020) - js: the good parts - douglas crockford - 4h52m (07.27.17)
021 - js for c# developers - shawn widermuth - 2h5
022 - js module fundamentals - brice wilson - 2h16m 
023 - hardcore functional programming in js - brian lonsdorf - 6h3m
024 - quick start to js: vol 3 - susan simkins - 1h24m
025 - modern async js - wes higbee - 6h35m
026 - structuring js code - dan wahlin - 2h10m
027 - testing clientside js - joe eames - 4h50m
028 - js design patterns - aaron powell - 2h2
029 - increase productivity: add a dev console to your app with js - carlos saloio - 2h34
030 - solve math programs with js - terry toy - 3h40
031 - prototype.js fundamentals - geoffrey grosenb - 3h3
032 - hands-on js project: solar calculator - paul cheney 2h6
033 - js.next: es6 - aaron frost - 5h24
034 - intro to js & jquery - karl swedberg - 3h34
035 - sweet.js: get started - aaron powell - 3h22
036 - reasoning about async js - wes higbee - 2h5
037 - front-end first: testing and prototyping js apps - elijah manor - 3h21
038 - large scale js on client and server - shawn wildermuth - 2h49
039 - play by play: html, css, and js with lea verou - 2h15
040 - adv techniques in js and jquery - kevin murray - 3h16m
041 - fixing common js bugs - elijah manor - 3h42
042 - front end web dev: get started - joe eames - 3h47
043 - jquery-free js - elijah manor - 2h26min
044 - modern, modular js with systemjs and jspm - wes higbee - 7h25
045 - building adv js animations with GSAP - todd shelton - 2h38
046 - shifting js into high gear with web workers - mike van sickle - 1h57m
047 - adv typescript - brice wilson - 2h55
048 - html5 fundamentals - craig shoemaker - 3h47
049 - creating vr experiences with js - alex mackey - 1h38m
050 - rapid es6 training - mark zamoyta - 4h16
051 - typescript fundamentals - dan wahlin - 4h25m
052 - asp.net ajax javascript and jquery - fritz onion - 2h22
053 - fundamentals of functional programming in js - nate taylor - 1h26
054 - become a full-stack .net developer - mosh hamedani - 5h34
055 - jquery fundamentals - dan wahlin - 5h18
056 - learn to program part 1: getting started - scott allen - 3h12
057 - getting started with typescript - brice wilson - 3h8m
058 - creating a responsive and flexible slideshow in javascript - alfredo lopez - 2h37
059 - fundamentals of building office add-ins with office js api - john brown - 2h36
060 - hands-on javascript project: json - paul cheney - 1h25
061 - building windows 8 apps with js and html - craig shoemaker 429
062 - extending bootstrap with css, js, and jquery - paul sheriff - 3h19
063 - angular cli - john pappa - 2h26min
064 - building web apps with open-source software on windows - jesse liberty - 2h30
065 - building stronger front-end practices - christina truong - 2h2
066 - jquery forms and bootstrap3 - mark zamoyta - 3h34
067 - jquery adv topics - joe eames - 3h3
068 - become a full-stack .net dev - architecture and testing - mosh hamedani - 3h59
069 - visual studio code - john papa - 4h11
070 - jquery animation - mark zamoyta - 3h41
071 - jquery template fundamentals - matt milner - 1h1
072 - getting started with progressive web apps - bill stavoulakis - 2h12
073 - jquery ui - scott allen - 1h54
074 - typescript in-depth - brice wilson - 4h40
075 - jquery tips and tricks - dan wahlin - 4h25m
076 - building scalable apis with graphql - samer buna - 2h10m
077 - jquery in depth - karl swedberg - 3h35
078 - getting started with es2017/es8 - roland gujit - 1h10
079 - jquery plugins & jquery ui - scott gonzalez - 3h26
080 - useful jquery plugins - robert boedighei - 3h16m
081 - fixing common jquery bugs - elijah manor - 2h27m
082 - asp.net core fundamentals - scott allen -5h57
083 - practical guide to vanilla web components - leon revill - 2h10m
084 - bootstrap 3 - shawn wildermuth - 3h50
085 - webpack fundamentals - joe eames - 2h23
086 - building app with asp.net mvc 4 - scott allen - 7h23
087 - intro to bootstrap - scott allen - 2h39m
088 - angular material fundamentals - ajden towfeek - 2h45
089 - asp.net mvc 5 fundamentals - scott allen - 6h14
090 - creating web apis what developers will lovew - kirsten hunter - 2h10m
091 - the journey from mvc to angular - paul sheriff - 2h26min
092 - html5 web component fundamentals - cory house - 5h18
093 - enhancing web uis with parallax scrolling - anthony harris - 1h1
094 - building bus components using angular - paul sheriff - 3h10m
095 - defeating cross-site scripting with content security policy - christian wenz - 2h10m
096 - practical html 5 - gill cleeren - 4
097 - C# fundamentals with C# 5.0 - scott allen - 6
098 - leveraging fluid-width principles for responsive design in jquery - saif ebrahim - 2
099 - amazing things you can do with a web browser - dan appleman - 1
100 - learn basic html 5 and css3 by building your first web page - mario duilio marcari - 2
101 - tactics and tools for troubleshooting front-end web dev - shelley benhoff - 1
102 - the geolocation api: using maps and location in your web pages - elizabeth robson - 1
103 - intro to web dev - nina zakharenko - 10
104 - creating a chrome extension - john sonmez - 2
105 - date and time fundamentals - matt johnson - 6
106 - angular: getting started - deborah kurata - 5
107 - angular fundamentals - joe eames - 9
108 - angular: first look - john papa - 4
109 - angular fundamentals - joe eames - 6
110 - play by play: angular 2 / rxjs / http and restful svc with john papas - dan wahlin - 1
111 - play by play: angular 2 quick start with john papa and ward bell - 2
112 - play by play: angular with typescript with john papa - 2
113 - building a responsive spa framework angular - mark zamoyta - 5
114 - code with us: angular quick start - john papa - 3
115 - angular forms - mark zamoyta - 2
116 - angular routing - deborah kurata - 4
117 - the journey from mvc to angular - 2
118 - angular material fundamentals - ajden towfeek - 2
119 - angular cli - john papa - 2
120 - angular reactive forms - deborah kurata - 3
(121) - angular 2 end-to-end - reggie dawson - 2 (07.28.17)
122 - integrating angular with node.js restful svc - dan wahlin - 4
123 - play by play: angular testing with john papa and ward bell - 1
(124) - adv angular workflows - johnathan mills - 1 (07.28.17)
125 - working with angular animations - gary simon - 1
126 - styling angular app - brian treese - 1
127 - add angular to mvc apps - paul sheriff - 2
128 - building bus components using angular - paul sheriff - 3
129 - become a full-stack .net dev - mosh hamedani - 5
130 - become a full-stack net dev - adv topics - mosh hamedani - 4
131 - asp.net core fundamentals - scott allen - 5
132 - building your first asp.net core web app - gill cleeren - 4
133 - builidng your first api with asp.net core - kevin dockx - 4
134 - building a restful api with asp.net core - kevin dockx - 8
135 - implementing and securing an api with asp.net core - shawn wildermuth - 6
136 - getting started with .net core for windows dev - wes higbee - 3
137 - asp.net core: the mvc request life cycle - alex wolf - 3
138 - asp.net mvc adv topics - scott allen - 5
139 - become a full-stack .net developer - architecture and testing - mos hamedani - 3
140 - using asp.net core to build single-page app - ajden towfeek - 1
141 - asp.net mvc fundamentals - scott allen - 4
142 - using visual studio code for asp.net core projects - shawn wildermuth - 2
143 - understanding asp.net core (update) - roland guijt - 2
144 - asp.net core with the new msbuild based tooling - wes higbee - 4
145 - building apps with asp.net mvc 4 - scott allen - 7
146 - understanding asp.net core security - goland guijt - 3
147 - migrating legacy http modules to asp.net core - chad mccallum - 2
148 - implementing an api in asp.net web api - shawn wildermuth - 6
149 - asp.net 5: first look - scott allen - 2
150 - c# fundamentals with visual studio 2015 - scott allen - 5
151 - implementing custom middleware components in asp.net core - galvin lanata - 1
152 - asp.net ajax js and jquery - fritz onion - 2
153 - 10 ways to build web services in .net - chad mccallum - 6
154 - building cross-platform apps with .net core - wes higbee - 7
(155) - asp.net mvc fundamentals - scott allen - 4 (07.28.17) 
156 - asp.net mvc adv topics - scott allen - 5
157 - docker for web dev - dan wahlin - 5
158 - play by play: docker for web dev with john papa - 1
159 - getting started with docker - nigel poulton - 2
160 - docker deep dive - getting started with docker on win - wes higbee - 5
161 - docker and containers: the big picture - nigel poulton - 1
162 - intro to docker on win with visual studio 2017 - marcel de vries - 4
163 - getting started with docker datacenter - elton stoneman - 1
164 - managing docker images - david clinton - 1
(165) - deploying .net app with octopus deploy - kenneth truyers - 1 (07.28.17)
166 - play by play: modernizing your deployment strategy with octopus - damian brady - 1
(167) - advanced techniques in js and jquery - kevin murray - 3 - (7/31/17)
(168) - basics of programming with js - kyle simpson - 2 - (7/31/17)
(169) - advanced js - kyle simpson - 6 - (7/31/17)
(170) - intro to sql - john flanders - 3 (8/1/17)
(171) - play by play: angular testing with john papa and ward bell - 1 (8/4/17) [1,2]
(172) - visual studio code - john papa - 4 (8/4/17) [1,2,3,4,5,6,7,8,9]
(173) - intro to node.js - paul o'fallon - 2 [1,2,3,4,5,6,7]
(174) - advanced node.js - samer buna - 3 [1,2,3,4,5,6,7,8,9,10]
(175) - rapid es6 training - mark zamoyta - 4 [1,2,3,4,5,6,7,8,9]
(176) - hardcore functional programming in js - brian lonsdorf - 6 (8/9/17) [1,2,3]
(177) - adv typescript - brice wilson - 2 (8/9/17) [1,2.1,3]
(178) - typescript in-depth - 4 (8/9/17) [1,2,3,4,5,6,7,8,9,10,11]
(179) - a pratical start with typescript - roland guijt - 1 (8/9/17) [1,2]

docker
...

elasticsearch
...

octopus
...
. 

.net
...
. entity framework - data oriented apps
. code first ddd domain driven design - creating classes first rather than db first. code first api will create db on the fly based on your classes and config.
. mvc model view controller

http-server
...
. run http-server
. http://127.0.0.1:8080/jia.html

node.js
...
. created 2009
. server side js
. 3 parts = libuv + v8 + custom js c++

clarity
...

es6 - ecmascript 2015
...

js
...
. var newJia = oldJia.replace('jia', 'cat');
. currying or partial app is one of the functional techniques

launch.json
...
{
    // Use IntelliSense to learn about possible Node.js debug attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
         {
            "name": "Launch Chrome against localhost, with sourcemaps",
            "type": "chrome",
            "request": "launch",
            "url": "http://localhost:4200/#/login/7777777",
            "sourceMaps": true,
            "trace": true,
           /*"diagnosticLogging": true,*/
            "webRoot": "${workspaceRoot}/src",
            "useDataDir": "${workspaceRoot}/.vscode/chrome",
            "sourceMapPathOverrides": {
              "webpack:///C:*": "c:/*"
          }
        },
        {
            "name": "Attach to Chrome, with sourcemaps",
            "type": "chrome",
            "request": "attach",
            "port": 9222,
            "sourceMaps": true,
            /*"diagnosticLogging": true,*/
            "webRoot": "${workspaceRoot}",
            "url": "http://localhost:4200/*",
            "sourceMapPathOverrides": {
                "webpack:///*": "/*"
            }
        },
        {
            "name": "Debug Test",
            "type": "chrome",
            "request": "launch",
            "url": "http://localhost:9876",
            "sourceMaps": true,
           /*"diagnosticLogging": true,*/
            "webRoot": "${workspaceRoot}",
            "sourceMapPathOverrides": {
              "webpack:///C:/HOMEOWNERS/homeownersclient/*": "${workspaceRoot}/*"
          }
        }        
    ]
}

typescript
...
. based on ECMAScript 2015
. designed by anders hejlsberg the designer of c# - 10/2012
. classes
  . fields- any var declared in a class
  . constructors
  . functions or methods
. numbers - property
  . MAX_VALUE
  . MIN_VALUE
  . NaN 
  . NEGATIVE_INFINITY
  . POSITIVE_INFINITY
  . prototype
  . constructor
. numbers - methods
  . toExponential()
  . toFixed()
  . toLocaleString()
  . toPrecision()
  . toString()
  . valueOf()
. string - property
  . constructor
  . length
  . prototype
. string - methods
  . charAt()
  . charCodeAt()
  . concat()
  . indexOf()
  . lastIndexOf()
  . localCompare()
  . match()
  . replace()
  . search()
  . slice()
  . split()
  . substr()
  . substring()
  . toLcaleLowerCase()
  . toLocaleUpperCase()
  . toLowerCase()
  . toString()
  . toUpperCase()
  . valueOf()
. array - methods
  . concat()
  . every()
  . filter()
  . forEach()
  . indexOf()
  . join()
  . lastIndexOf()
  . map()
  . pop() - remove last element from array and returns that element
  . push() - adds one more element to the end of the array and returns the length of the array
  . reduce()
  . reduceRight()
  . reverse()
  . shift() - remove 1st element and return element
  . slice() 
  . some()
  . sort()
  . splice()
  . toString()
  . unshift()

. prototype - the prototype property allows you to add properties and methods to an object
. Enums
. tuples - let myTuple: [number,string] = [25, 'truck'];
. functions - building blocks of readable, maintainable, and reusable code
  . lambda - fat arrow function
    1. parameters
    2. fat arrow notation => aka goes to operators
    3. statements - functions instruction set
    . var foo = (x:number)=>10+x
  . defining a function what and how task to be done
  . calling a function - executing function
  . returning functions - return values
  . parameterized function - pass values
  . anonymous function
    . var msg = function() {
      return "hello";
    . }
    . console.log(msg())
. loops
  . break - break out of loops
  . continue
  . definite loop - for loop
  . indefinite loop 
    . do...while
    . while loop
. types
  . boolean
  . number
  . string
  . array
  . Enum - friendly names to finite set of numeric values
  . any - string, number, or object
  . void - function does not return a value
. let and const - scope inside block not function (var hoisted to top of function) name only allowed once in each code block
. operators
  . arithmetic
  . logical
  . relational 
  . bitwise
  . assignment
  . ternary/conditional - test ? expr1 : expr2
  . string
  . decision
    . if statement
    . if..else statement
    . else... if and nested if statements
    . switch statement
  . type
    . typeof
    . instanceof
. SCOPE
  . global scope
  . class scope (fields) 
  . local scope - inside methods, loops, etc.
. type assertion - changing a var from one type to another
. superset of js
. strong typing fewer bugs
. compiles to js
. cross platform
. open sourceMapPathOverrides
. tsc -v (check for version)
. variable declaration in tsc
  . var id: type = value;
  . var id: type; (value=undefined)
  . var id = value; (type=any)
  . var id; (type=any,value=undefined)
. var names
  . alpha and numeric (cannot start with number)
  . no special char or spaces (except _ and $)
. user-defined types
  . enumerations (enums)
  . classes
  . interfaces
  . arrays
  . tuple
. null and undefined
  . undefined - var has no value or object assitned to it
  . null - var set to object with value undefined
. keywords
  . break
  . as
  . any
  . switch
  . case
  . if
  . throw
  . else
  . var
  . number
  . string
  . get
  . module
  . type
  . instanceof
  . typeof
  . public
  . private
  . enum
  . export
  . finally
  . for
  . while
  . void
  . null
  . super
  . this
  . new
  . in
  . return
  . true
  . false
  . any
  . extends
  . static
  . letter
  . package
  . implements
  . interfaces
  . function
  . new
  . try
  . yield
  . const
  . continue
  . do
  . catch
  . name? new?

books
...
. design patterns: elements of reusable object-oriented software by erich gamma, richard helm, ralph johnson and john vlissides "gang of four"

all about fat arrow functions
...
. you don't need to keep typing function
. it lexically captures the meaning of this
. it lexically captures the meaning of arguments
. sample - var inc = (x)=>x+1;

ng4 notes
...
. component classes manage html templates
. app logic in services
. organizing components and services in modules
. bootstrapping the root module
. decorators - functions that modify js classes - angular uses decorators to attach metadata to classes so that it knows what those classes mean and how they should work
. declarations - view classes that belongs to this module
  1. components
  2. directives
  3. pipes
. exports
. imports 
. providers - services
. bootstrap - link to root component
. components
  . controls a patch of screen called a view
  . define app logic (what it does to support the view) inside a class
  . the class interacts with the view through an API of properties and methods
. lifecycle hooks - creates, updates, destroys - ngOnInit()
. templates - html
. metadata - tells angular how to process a class
. @Component decorators
  1. selector - CSS selector that tells angular to create and insert an instance of this component where it finds a <component-name> tag in parent html
  2. templateUrl - relative address to html template
  3. providers - array of dependency injection providers for services that the component requires
. other decorators
  1. @Injectable
  2. @Input
  3. @output
. data binding - bind component data to html template single or both directions
. interpolation {{name}}
. property binding [hero] pass selectedHero from parent to child
. event binding (click) calls component methods from browser events like button clicks for example
. 2 way data binding with <input [(ngModel)]="hero.name">
. structural directives
  1. <li *ngFor="let hero of heroes"></li>
  2. <hero-detail *ngIf="selectedHero"></hero-detail>
. attribute directive - ngModel - <input [(ngModel)]="hero.name">
  . ngSwitch
  . ngStyle
  . ngClass









































 




